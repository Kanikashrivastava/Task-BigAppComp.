{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.1664aa8385ad5a2e812e.hot-update.js","sources":["webpack:///./src/components/newUsers.js"],"sourcesContent":["import React , { Component } from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'inline-flex',\r\n      textAlign: 'center'\r\n    },\r\n    title: {\r\n        float: 'left',\r\n        fontSize: '25px'\r\n      },\r\n      age: {\r\n          float: 'right',\r\n          marginleft: 10\r\n      },\r\n      left: {\r\n          float:'left',\r\n          marginRight: 10\r\n      },\r\n      Doughnut: {\r\n          height: '217px'\r\n      }\r\n  });\r\n\r\n\r\n  var originalDoughnutDraw = Chart.controllers.doughnut.prototype.draw;\r\n  Chart.helpers.extend(Chart.controllers.doughnut.prototype, {\r\n    draw: function() {\r\n      originalDoughnutDraw.apply(this, arguments);\r\n      \r\n      var chart = this.chart.chart;\r\n      var ctx = chart.ctx;\r\n      var width = chart.width;\r\n      var height = chart.height;\r\n  \r\n      var fontSize = (height / 114).toFixed(2);\r\n      ctx.font = fontSize + \"em Verdana\";\r\n      ctx.textBaseline = \"middle\";\r\n  \r\n      var text = chart.config.data.text,\r\n          textX = Math.round((width - ctx.measureText(text).width) / 2),\r\n          textY = height / 2;\r\n  \r\n      ctx.fillText(text, textX, textY);\r\n    }\r\n  });\r\n\r\nclass NewUserData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ChartData: {\r\n                labels: ['New User Growth', 'Conversion Rate'],\r\n                datasets: [\r\n                    {\r\n                        label: 'Population',\r\n                        data: [\r\n                            9.43,\r\n                            6.43\r\n                        ],\r\n                        backgroundColor: [\r\n                            'grey',\r\n                            '#ce2e2e'                            \r\n                        ]\r\n                    }\r\n                ],\r\n                text: '587'\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.Doughnut}>\r\n                <div>\r\n                    <div>\r\n                        <Typography className={classes.title}>New users</Typography>\r\n                    </div>\r\n                    <div className={classes.age}> \r\n                        <Typography className={classes.left}>Last 30 days.</Typography>\r\n                        <SvgIcon>\r\n                            <path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\" />\r\n                        </SvgIcon>\r\n                        <img className={classes.age} src=\"https://img.icons8.com/material-outlined/24/000000/more.png\"/>\r\n                    </div>\r\n            </div>\r\n                <Doughnut\r\n                \r\n                    data={this.state.ChartData}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                        rotation: 1 * Math.PI,\r\n                        circumference: 1 * Math.PI\r\n                    }}\r\n                />\r\n                <Divider />\r\n                <div className={classes.userRatio}>\r\n                    <List className={classes.root}>\r\n                        <ListItem>\r\n                        <ListItemText primary=\"6.43%\" secondary=\"New users Growth\" />\r\n                        </ListItem>\r\n                        <li>\r\n                        <Divider />\r\n                        </li>\r\n                        <ListItem>\r\n                        <ListItemText primary=\"9.44%\" secondary=\"Conversion Rate\" />\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} \r\nNewUserData.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\nexport default withStyles(styles)(NewUserData);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAjBA;AAAA;AACA;AAsBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAIA;AACA;AAlBA;AACA;AAoBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AANA;AAYA;AAfA;AADA;AAFA;AAqBA;AACA;;;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAlEA;AACA;AAmEA;AACA;AADA;AAIA;;;;A","sourceRoot":""}