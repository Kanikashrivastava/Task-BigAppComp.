{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.23e9b983954f48094f5b.hot-update.js","sources":["webpack:///./src/components/Charts.js","webpack:///./src/components/sidedataDevices.js"],"sourcesContent":["import React , { Component} from  'react';\r\nimport DemographicsData from './demographics';\r\nimport InsetDividers from './sidedataDevices';\r\nimport NewUserData from './newUsers';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nconst styles = {\r\n    root: {\r\n        display : 'inline-flex',\r\n        grow: 2\r\n    },\r\n    card: {\r\n      minWidth: 430,\r\n      margin: 10\r\n    }\r\n};\r\n\r\nfunction Charts(props) {\r\n    const { classes } = props;\r\n  \r\n    return (\r\n        <div className={classes.root}>\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                <InsetDividers/>\r\n            </CardContent>\r\n        </Card>\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                <DemographicsData/>\r\n            </CardContent>\r\n        </Card>\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                <NewUserData/>\r\n            </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  \r\nCharts.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\nexport default withStyles(styles)(Charts);","import React , { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DevicesData from './devices'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '50%',\r\n      maxWidth: 260,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    devices: {\r\n        display: \"inline-flex\"\r\n    },\r\n    title: {\r\n      float: 'left',\r\n      fontSize: '25px'\r\n    },\r\n    age: {\r\n        float: 'right',\r\n        marginleft: 10\r\n    },\r\n    left: {\r\n        float:'left',\r\n        marginRight: 10\r\n    }\r\n  });\r\n  \r\n\r\n\r\nfunction InsetDividers(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div className={classes.devices}>\r\n        <DevicesData/>\r\n      <List className={classes.root}>\r\n        <ListItem>\r\n          <ListItemText primary=\"23.2%\" secondary=\"Desktop\" />\r\n        </ListItem>\r\n        <li>\r\n          <Divider variant=\"inset\" />\r\n        </li>\r\n        <ListItem>\r\n          <ListItemText primary=\"33.4%\" secondary=\"Teblet\" />\r\n        </ListItem>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n        <ListItem>\r\n          <ListItemText primary=\"44.3%\" secondary=\"Mobile\" />\r\n        </ListItem>\r\n      </List>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  InsetDividers.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\nexport default withStyles(styles)(InsetDividers);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AACA;AAUA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAjBA;AAAA;AACA;AAwBA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}